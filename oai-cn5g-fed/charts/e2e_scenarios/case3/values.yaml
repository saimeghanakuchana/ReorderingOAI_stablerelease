global:
  kubernetesDistribution: Vanilla #Openshift/Vanilla Kubernetes for Upstream Kubernetes
  coreNetworkConfigMap: core
  clusterIpServiceIpAllocation: false #this will allocate ip-address to cluster Ip service
  waitForAMF: true     #gNB waits for AMF 
  waitForRadio: true   #UE waits for RFSimulated gNB
  waitForNRF: true     #All NFs wait for NRF to be ready
  waitForUDR: true
  http2Param: "--http2-prior-knowledge"  # if waitForNRF is true and http2 is used for all NF then this param is needed
  timeout: 1
mysql:
  enabled: true
  imagePullPolicy: IfNotPresent
  oai5gdatabase: basic
  imagePullSecrets:
    - name: "regcred"
  persistence:
    enabled: false
  resources:
    requests:
      memory: 512Mi
      cpu: 200m
    limits:
      memory: 512Mi
      cpu: 200m
oai-nrf:
  enabled: true
  nfimage:
    repository: docker.io/oaisoftwarealliance/oai-nrf          ## The image will be pulled from dockerhub
    version: v2.1.0                          ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: true #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  resources:
    define: false
    limits:
      nf:
        cpu: 150m
        memory: 128Mi
    requests:
      nf:
        cpu: 150m
        memory: 128Mi
  nodeName: ""
oai-udr:
  enabled: true
  nfimage:  
    repository: docker.io/oaisoftwarealliance/oai-udr           ## The image will be pulled from dockerhub
    version: v2.1.0                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: true #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  resources:
    define: false
    limits:
      nf:
        cpu: 150m
        memory: 128Mi
    requests:
      nf:
        cpu: 150m
        memory: 128Mi
oai-udm:
  enabled: true
  nfimage:  
    repository: docker.io/oaisoftwarealliance/oai-udm           ## The image will be pulled from dockerhub
    version: v2.1.0                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: true #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  resources:
    define: false
    limits:
      nf:
        cpu: 150m
        memory: 128Mi
    requests:
      nf:
        cpu: 150m
        memory: 128Mi
oai-ausf:
  enabled: true
  nfimage:  
    repository: docker.io/oaisoftwarealliance/oai-ausf           ## The image will be pulled from dockerhub
    version: v2.1.0                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: true #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  resources:
    define: false
    limits:
      nf:
        cpu: 150m
        memory: 128Mi
    requests:
      nf:
        cpu: 150m
        memory: 128Mi
oai-amf:
  enabled: true
  nfimage:  
    repository: docker.io/oaisoftwarealliance/oai-amf           ## The image will be pulled from dockerhub
    version: v2.1.0                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: true #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  multus:
    ## If you don't want to add a default route in your pod then replace this field with ""
    defaultGateway: ""
    n2Interface:
      create: false
      ipAdd: "172.21.6.206"
      netmask: "22"
      name: "n2"       #name inside the pod
      ## If you do not have a gateway leave the field empty
      gateway: 172.21.7.254
      ## If you do not want to add any routes in your pod then leave this field empty
      routes: ""
      hostInterface: "bond0" # Interface of the host machine on which this pod will be scheduled
  resources:
    define: false
    limits:
      nf:
        cpu: 250m
        memory: 256Mi
    requests:
      nf:
        cpu: 250m
        memory: 256Mi
oai-upf:
  enabled: true
  nfimage:  
    repository: docker.io/oaisoftwarealliance/oai-upf    ## The image will be pulled from dockerhub
    version: v2.1.0                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: true #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  # create an extra interface for N3 in case the gNB is outside the cluster network or there is a need to have dedicated interface for N3
  ## Change these ip-addresses according to your environment
  ## N4, N6 are optional only if you want that UPF uses different subnets for different 3gpp interfaces. 
  multus:
    ## If you don't want to add a default route in your pod then replace this field with ""
    defaultGateway: ""
    n3Interface:
      create: false
      ipAdd: "172.21.8.95"
      netmask: "22"
      name: "n3"       #name inside the pod
      ## If you do not have a gateway leave the field empty
      gateway: ""
      ## If you don't want to add a default route in your pod then replace this field with ""
      routes: ""
      hostInterface: "bond0"
    ## For n4 it is better to re-use eth0 interface inside the pod (primary CNI of Kubernetes)
    n4Interface:
      create: false
      ipAdd: "192.168.24.2"
      netmask: "24"
      name: "n4" 
      ## If you do not have a gateway leave the field empty
      gateway: ""
      ## If you do not want to add any routes in your pod then leave this field empty
      routes: ""
      hostInterface: "bond0"
    n6Interface:
      create: false
      ipAdd: "192.168.22.2"
      name: "n6" 
      netmask: "24"
      ## If you do not have a gateway leave the field empty
      gateway: ""
      ## If you do not want to add any routes in your pod then leave this field empty
      routes: ""
      hostInterface: "bond0"
  #NOTE: If the interface you selected for n6 does not have internet access then UE will not be able to reach internet
  resources:
    define: false
    limits:
      nf:
        cpu: 500m
        memory: 512Mi
    requests:
      nf:
        cpu: 500m
        memory: 512Mi
oai-traffic-server:
  enabled: true
  trafficServer:
    repository: docker.io/oaisoftwarealliance/trf-gen-cn5g
    version: latest
    #pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  multus:
    create: false
    ipAdd: "172.21.6.12"
    netmask: "22"
    defaultGateway: "172.21.7.254"
    hostInterface: "bond0"  # Interface of the host machine on which this pod will be scheduled
  config:
    ueroute: 12.1.1.0/24
    upfHost: oai-upf
    routeInterface: eth0
    noOfIperf3Server: 2
  resources:
    define: false
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  nodeName: ""
oai-smf:
  enabled: true
  nfimage:  
    repository: docker.io/oaisoftwarealliance/oai-smf           ## The image will be pulled from dockerhub
    version: v2.1.0            ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: true #only for taking pcaps inside network function pod
  multus:
    ## If you don't want to add a default route in your pod then replace this field with ""
    defaultGateway: ""
    n4Interface:
      create: false
      ipAdd: "192.168.24.3"
      netmask: "24"
      ## If you do not have a gateway leave the field empty
      gateway: ""
      ## If you do not want to add any routes in your pod then leave this field empty
      # routes: [{'dst': '10.8.0.0/24','gw': '172.21.7.254'}, {'dst': '10.9.0.0/24','gw': '172.21.7.254'}]
      hostInterface: "bond0"
  imagePullSecrets:
    - name: "regcred"
  resources:
    define: false
    limits:
      nf:
        cpu: 250m
        memory: 256Mi
    requests:
      nf:
        cpu: 250m
        memory: 256Mi
  nodeSelector: {}
  nodeName: ""
oai-cu-cp:
  enabled: true
  nfimage:  
    repository: docker.io/oaisoftwarealliance/oai-gnb
    version: 2024.w32
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: true #only for taking pcaps inside network function pod
  multus:
    # to remove the default gateway change it with ""
    defaultGateway: ""
    e1Interface:
      create: false
      ipAdd: "192.168.18.12"
      netmask: "24"
      name: "e1"
      # if gatway is empty then it will be removed
      #gateway: ""
      #routes: [{'dst': '10.8.0.0/24','gw': '172.21.7.254'}, {'dst': '10.9.0.0/24','gw': '172.21.7.254'}]
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
    n2Interface:
      create: false
      ipAdd: "172.21.6.208"
      netmask: "22"
      name: "n2"
      # if gatway is empty then it will be removed
      #gateway: ""
      #routes: 
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
    f1cInterface:
      create: false
      ipAdd: "192.168.20.22"
      netmask: "24"
      name: "f1c"
      # if gatway is empty then it will be removed
      #gateway: ""
      #routes: 
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
  config:
    timeZone: "Europe/Paris"
    useAdditionalOptions: "--sa --log_config.global_log_options level,nocolor,time"
    cucpName: "oai-cu-cp"
    amfhost: "oai-amf"  # amf ip-address or service-name oai-amf or 172.21.6.94
    n2IfName: "eth0"    # if multus.n2Interface.create is true then use n2 or you can only use 1 interface e1 or eth0 
    f1IfName: "eth0"   #if multus.f1Interface.create is true then use f1 or you can only use 1 interface e1 or eth0 
    e1IfName: "eth0"   #if multus.f1Interface.create is true then use e1 or you can only use 1 interface e1 or eth0 
    f1cuPort: "2153"   #2153 if using same interface for f1 and n3 else standard port 2152 should be use if f1 and n3 interface are different
    f1duPort: "2153"   #2153 if using same interface for f1 and n3 else standard port 2152 should be use if f1 and n3 interface are different
  resources:
    define: true
    limits:
      nf:
        cpu: 500m
        memory: 512Mi
    requests:
      nf:
        cpu: 500m
        memory: 512Mi
  nodeSelector:
oai-cu-up:
  enabled: true
  nfimage:  
    repository: docker.io/oaisoftwarealliance/oai-nr-cuup
    version: 2024.w32                         ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: true #only for taking pcaps inside network function pod
  multus:
    # to remove the default gateway change it with ""
    defaultGateway: ""
    e1Interface:
      create: false
      ipAdd: "192.168.18.13"
      netmask: "24"
      name: "e1"
      # if gatway is empty then it will be removed
      #gateway: ""
      #routes: [{'dst': '10.8.0.0/24','gw': '172.21.7.254'}, {'dst': '10.9.0.0/24','gw': '172.21.7.254'}]
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
    n3Interface:
      create: false
      ipAdd: "192.168.25.24"
      netmask: "24"
      name: "n3"
      # if gatway is empty then it will be removed
      #gateway: ""
      #routes: []
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
    f1uInterface:
      create: false
      ipAdd: "192.168.20.24"
      netmask: "24"
      name: "f1u"
      # if gatway is empty then it will be removed
      #gateway: ""
      #routes: []
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
  config:
    timeZone: "Europe/Paris"
    useAdditionalOptions: "--sa"
    cuupName: "oai-cuup"
    cuCpHost: "oai-cu" # Service name or ip-address
    n2IfName: "eth0"    # if multus.n2Interface.create is true then use n2
    n3IfName: "eth0"   #if multus.n3Interface.create is true then use n3 or you can only use 1 interface e1 or eth0 
    f1IfName: "eth0"   #if multus.f1uInterface.create is true then use f1 or you can only use 1 interface e1 or eth0 
    e1IfName: "eth0"   #if multus.e1Interface.create is true then use e1 or you can only use 1 interface e1 or eth0 
    f1cuPort: "2153"   #2153 if using same interface for f1 and n3 else standard port 2152 should be use if f1 and n3 interface are different
    f1duPort: "2153"   #2153 if using same interface for f1 and n3 else standard port 2152 should be use if f1 and n3 interface are different
  resources:
    define: true
    limits:
      nf:
        cpu: 500m
        memory: 512Mi
    requests:
      nf:
        cpu: 500m
        memory: 512Mi
  nodeSelector:
oai-du:
  enabled: true
  nfimage:  
    repository: docker.io/oaisoftwarealliance/oai-gnb
    version: 2024.w32
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: true #only for taking pcaps inside network function pod
  multus:
    # if default gatway is left blank then it will be removed
    defaultGateway: ""
    f1Interface:
      create: false
      ipAdd: "192.168.20.23"
      netmask: "24"
      name: "f1"
      # if gatway is empty then it will be removed
      #gateway: "172.21.7.254"
      #routes: [{'dst': '10.8.0.0/24','gw': '172.21.7.254'}, {'dst': '10.9.0.0/24','gw': '172.21.7.254'}]
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
    ruInterface:            #Only needed if using a ethernet based RU/USRP
      create: false
      ipAdd: "192.168.80.90"
      netmask: "24"
      name: "ru"
      # if gatway is commented then it will be remove
      #gateway: "192.168.80.1"  #In case you don't have a gateway remove it from here
      ## The value must be [0, master's MTU]. If commented it will masters MTU
      #mtu: 9000
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
  config:
    timeZone: "Europe/Paris"
    useAdditionalOptions: "--sa --rfsim --log_config.global_log_options level,nocolor,time"
    duName: "oai-du-rfsim"
    usrp: rfsim   #allowed values rfsim, b2xx, n3xx or x3xx
    f1IfName: "eth0"   #if multus.f1Interface.create is true then use f1
    cuHost: "oai-cu" ## Ip-address or hostname
    f1cuPort: "2153"   #2153 if using same interface for f1 and n3 else standard port 2152 should be use if f1 and n3 interface are different
    f1duPort: "2153"   #2153 if using same interface for f1 and n3 else standard port 2152 should be use if f1 and n3 interface are different
  resources:
    define: false
    limits:
      nf:
        cpu: 3000m
        memory: 2Gi
    requests:
      nf:
        cpu: 3000m
        memory: 2Gi
  nodeSelector:
oai-nr-ue:
  enabled: true
  nfimage:  
    repository: docker.io/oaisoftwarealliance/oai-nr-ue
    version: 2024.w32
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  config:
    timeZone: "Europe/Paris"
    rfSimServer: "oai-ran"    # ip-address of rfsim or service name oai-gnb or oai-du
    fullImsi: "001010000000100"       # make sure all the below entries are present in the subscriber database
    fullKey: "fec86ba6eb707ed08905757b1bb44b8f"
    opc: "C42449363BBAD02B66D16BC975D77CC1"
    dnn: "oai"
    sst: "1"                     # configure according to gnb and amf, smf and upf
    sd: "16777215"
    usrp: "rfsim"            # allowed rfsim, b2xx, n3xx, x3xx
    useAdditionalOptions: "--sa --rfsim -r 106 --numerology 1 -C 3619200000 --log_config.global_log_options level,nocolor,time"
  resources:
    define: false
    limits:
      nf:
        cpu: 2000m
        memory: 4Gi
    requests:
      nf:
        cpu: 2000m
        memory: 4Gi
  nodeSelector:

